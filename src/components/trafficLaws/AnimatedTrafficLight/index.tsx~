import {type ReactElement, useState} from "react";
import {
    trafficLightsPaths
} from "@components/trafficLaws/AnimatedTrafficLight/meta.ts";
import "./style.css";

const AnimatedTrafficLight = (): ReactElement => {
    const [redLightHovered, setRedLightHovered] = useState(false);
    const [yellowLightHovered, setYellowLightHovered] = useState(false);
    const [greenLightHovered, setGreenLightHovered] = useState(false);

    const getRedLightClasses = () => {
        return `red-light-${redLightHovered ? "on" : "off"}`
    }

    const getYellowLightClasses = () => {
        return `yellow-light-${yellowLightHovered ? "on" : "off"}`
    }

    const getGreenLightClasses = () => {
        return `green-light-${greenLightHovered ? "on" : "off"}`
    }

    const changeClassesHandle = (color: string, hoveredState: boolean) => {
        switch (color) {
            case "red":
                setRedLightHovered(!hoveredState);
                break;
            case "yellow":
                setYellowLightHovered(!hoveredState);
                break;
            case "green":
                setGreenLightHovered(!hoveredState);
                break;
            default:
                console.log();
                break;
        }
    }

    return (
        <div className="animated-traffic-light">
            <div className="animated-traffic-light-wrapper">
                <div className="traffic-light-background-image-wrapper">
                    <img src={trafficLightsPaths.background}/>
                </div>
                <div className="traffic-light-container">
                    <div
                        className={`traffic-light-image-wrapper`}
                        onMouseEnter={() => setRedLightHovered(true)}
                        onMouseLeave={() => setRedLightHovered(false)}
                        onClick={changeClassesHandle.bind(null, "red", redLightHovered)}
                    >
                        {!redLightHovered && <img src={trafficLightsPaths.red.off}/>}
                        {redLightHovered && <img className={getRedLightClasses()} src={trafficLightsPaths.red.on}/>}
                        {redLightHovered && <span className="text-assembly red">Красный — стой</span>}
                    </div>
                    <div
                        className={`traffic-light-image-wrapper`}
                        onMouseEnter={() => setYellowLightHovered(true)}
                        onMouseLeave={() => setYellowLightHovered(false)}
                        onClick={changeClassesHandle.bind(null, "yellow", yellowLightHovered)}
                    >
                        {!yellowLightHovered && <img src={trafficLightsPaths.yellow.off}/>}
                        {yellowLightHovered &&
                            <img className={getYellowLightClasses()} src={trafficLightsPaths.yellow.on}/>}
                        {yellowLightHovered && <span className="text-assembly yellow">Жёлтый — приготовься</span>}
                    </div>
                    <div
                        className={`traffic-light-image-wrapper`}
                        onMouseEnter={() => setGreenLightHovered(true)}
                        onMouseLeave={() => setGreenLightHovered(false)}
                        onClick={changeClassesHandle.bind(null, "green", greenLightHovered)}
                    >
                        {!greenLightHovered && <img className="green-light-off" src={trafficLightsPaths.green.off}/>}
                        {greenLightHovered &&
                            <img className={getGreenLightClasses()} src={trafficLightsPaths.green.on}/>}
                        {greenLightHovered && <span className="text-assembly green">Зелёный — можно идти</span>}
                    </div>
                </div>
            </div>
        </div>
    );
};

export default AnimatedTrafficLight;